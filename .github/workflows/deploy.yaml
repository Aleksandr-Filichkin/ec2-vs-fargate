name: Build and Deploy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master,development ]

jobs:

  build:

    name: Build Image
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Setup Java and Maven
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ec2-vs-fargate
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_RUN_ID .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_RUN_ID

#      - name: Terraform init and plan
#        env:
#          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#        run: |
#          cd ./terraform
#          terraform init -input=false
#          terraform plan -var image_version=$GITHUB_RUN_ID -var-file="dev-terraform.tfvars"
#          terraform apply -var image_version=$GITHUB_RUN_ID -var-file="dev-terraform.tfvars" -auto-approve

